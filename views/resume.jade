extends layout

mixin microdate(datestr)
  abbr(attributes,
    title=moment(new Date(datestr)).format("YYYY-MM-DD"))= datestr

block head
  title Stuart P. Bentley: résumé
  link(href='/styles/resume.css', rel='stylesheet', type='text/css')
  link(rel="icon", href="stuhat.svg", size="any", type="image/svg+xml")
  link(rel="icon", href="stuhat256b.png", sizes="256x256", type="image/png")
  link(rel="icon", href="stuhat16b.png", sizes="16x16", type="image/png")
  link(rel="profile", href="http://microformats.org/profile/hcard")

block body
  - var marked = require("marked")
  - var moment = require("moment")
  header.vcard
    h1.fn#spb-name
      span.given-name= contact.name.first
      =' '
      abbr.additional-name= contact.name.mi
      =' '
      span.family-name= contact.name.last
    address.adr
      div
        span.street-address= contact.address.street + (contact.address.ext? ', ' + contact.address.ext : '')
      div
        span.locality= contact.address.city
        =', '
        abbr.region(title=contact.address.state.name)= contact.address.state.abbr
        =' '
        span.postal-code= contact.address.zip
      div
        ='Email: '
        a.email(href="mailto:"+contact.email)= contact.email
      div
        ='Phone: '
        a.tel(href="tel:"+contact.phone)= contact.phone
  main
    section#tech-experience
      h2 Tech Experience
      ul: for techset in techs
        for items, category in techset
          li= category + ": "
            if typeof(items) == "string"
              != marked(items)
            else
              for item, i in items
                a.skill(href=links[item], ref='tag')= item
                = i < items.length-1 ? ", " : ""
    section.vcalendar#work-experience
      h2 Work Experience
      for job in work
        div.experience.vevent
          h3
            span.vcard
              a.include(href='#spb-name')
              span.title= job.position
              =', '
              a.url.org(href=links[job.organization])= job.organization
            =', '
            +microdate(job.timespan.from).dtstart
            =' - '
            +microdate(job.timespan.to).dtend
        != marked(job.tasks)
    section#portfolio
      h2 Portfolio
      != marked(portfolio)
    section#education
      h2 Education
      ul.vcalendar: for edu in education
        li.education.vevent
          span.summary.vcard
            = edu.accolade + ', '
            a.url.fn.org(href=links[edu.institution])= edu.institution
          =' '
          +microdate(edu.timespan.from).dtstart
          =' - '
          +microdate(edu.timespan.to).dtend
  footer
    div.
      Version <span id="version">#{version}<span>, rendered
      <span id="build-date">#{moment().format('MMM D YYYY')}</span>.
      The latest version of this resume is kept at
      <a href="#{online.html}">#{online.html}</a>.
    div.
      Plain text / Markdown version: <a href="#{online.markdown}">#{online.markdown}</a> |
      YAML source: <a href="#{online.yaml}">#{online.yaml}</a>
    div.
      The Node.js code that creates this resume, from YAML, through Jade, to HTML, is online at
      <a href="#{online.code}">#{online.code}</a>
